%box {
  background-color: #ffffff;
  box-shadow: 0px 0 16px 0 rgba(0, 0, 0, 0.1);
};

$box-spacers: (
  "xs" : (spacer(1) spacer(2)),
  "sm" : (spacer(3) spacer(4)),
  "md" : (spacer(5) spacer(7)),
  "lg" : (spacer(7) spacer(9)),
  "xl" : (spacer(8) spacer(10))
);

.box {
  @mixin make-content-fluid($value) {
    max-width: calc(100% + #{$value * 2};
    margin-right: -#{$value};
    margin-left: -#{$value};
    padding-right: #{$value};
    padding-left: #{$value};
  };

  $padding-map: map-get($box-spacers, 'sm');
  $padding-y: nth($padding-map, 1);
  $padding-x: nth($padding-map, 2);

  border-radius: 3px;

  @extend %box;

  padding: $padding-y $padding-x;

  &--fluid {
    height: 100%;
  }

  &--shading {
    &--none {
      box-shadow: none;
    }

    &--spread {
      box-shadow: 0px 18px 45px 0 rgba(0, 0, 0, 0.08);
    }
  }

  &--bdrs {
    &--none {
      border-radius: none;
    }

    &--rounded {
      border-radius: 7px;
    }
  }

  &__content {
    max-width: 100%;
    overflow-x: auto;

    &--fluid {
      @include make-content-fluid($padding-x);
    }
  }

  @each $size, $length-map in $box-spacers {
    $p-x: nth($length-map, 2);
    $length: nth($length-map, 1) $p-x;

    &--p--#{$size} {
      padding: $length;
    }

    &--p--#{$size} &__content--fluid {
      @include make-content-fluid($p-x);
    }
  };
}
